apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ default .Release.Namespace .Values.namespace }}
  labels:
    app: {{ template "jupyter.app-name" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "jupyter.app-name" . }}
  strategy:
    rollingUpdate:
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: {{ template "jupyter.app-name" . }}
        release: {{ .Release.Name }}
        datalayer.io/app: {{ template "jupyter.app-name" . }}
    spec:
      terminationGracePeriodSeconds: 0
      {{- with .Values.jupyter.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      imagePullSecrets:
            - name: reg-creds
      containers:
        - name: jupyter
          image: {{ .Values.jupyter.image }}
          imagePullPolicy: {{ .Values.jupyter.imagePullPolicy }}
          ports:
            - containerPort: {{ .Values.jupyter.port }}
              protocol: TCP
          {{- if or .Values.jupyter.env .Values.jupyter.envValueFrom }}
          env:
            {{- range $key, $value := .Values.jupyter.envValueFrom }}
            - name: {{ $key }}
              valueFrom: {{- $value | toYaml | nindent 16 }}
            {{- end }}
            {{- range $key, $value := .Values.jupyter.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          {{- end }}
          {{- with .Values.jupyter.resources }}
          resources: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.jupyter.volumeMounts }}
          volumeMounts: {{- toYaml . | nindent 12 }}
          {{- end }}
#        - name: jupyter-sidecar
#          image: {{ .Values.jupyter.sidecar.image }}
#          imagePullPolicy: {{ .Values.jupyter.imagePullPolicy }}
#          args: ["proxy", "-p", "8001"]
