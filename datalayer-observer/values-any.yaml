defaultRules:
  create: true
  rules:
    alertmanager: false
alertmanager:
  alertmanagerSpec:
    nodeSelector:
      role.datalayer.io/system: "true"
prometheus:
  prometheusSpec:
    routePrefix: /prometheus
    podMonitorSelector:
      matchLabels:
        monitoring.datalayer.io/name: datalayer-jupyter
    nodeSelector:
      role.datalayer.io/system: "true"
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: 'true'
      nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
      nginx.ingress.kubernetes.io/affinity: cookie
      nginx.ingress.kubernetes.io/affinity-mode: persistent
      nginx.ingress.kubernetes.io/session-cookie-expires: '172800'
      nginx.ingress.kubernetes.io/session-cookie-max-age: '172800'
      nginx.ingress.kubernetes.io/session-cookie-samesite: None
      nginx.ingress.kubernetes.io/session-cookie-name: prometheus-affinity
      nginx.ingress.kubernetes.io/enable-modsecurity: 'true'
      nginx.ingress.kubernetes.io/enable-owasp-core-rules: 'true'
      cert-manager.io/acme-challenge-type: http01
      cert-manager.io/cluster-issuer: letsencrypt
    labels:
      app: prometheus
    paths:
      - /prometheus
    tls:
      - secretName: datalayer-observer-cert-secret
prometheusOperator:
  nodeSelector:
    role.datalayer.io/system: "true"
  admissionWebhooks:
    deployment:
        nodeSelector:
          role.datalayer.io/system: "true"
    patch:
        nodeSelector:
          role.datalayer.io/system: "true"
thanosRuler:
  thanosRulerSpec:
    nodeSelector:
      role.datalayer.io/system: "true"
grafana:
  enabled: true
  nodeSelector:
    role.datalayer.io/system: "true"
  ## Config to serve from sub_path
  # https://github.com/prometheus-community/helm-charts/issues/201
  # https://github.com/kubernetes/ingress-nginx/issues/6140#issuecomment-1132972644
  grafana.ini:
    server:
      serve_from_sub_path: true
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: 'true'
      nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
      nginx.ingress.kubernetes.io/affinity: cookie
      nginx.ingress.kubernetes.io/affinity-mode: persistent
      nginx.ingress.kubernetes.io/session-cookie-expires: '172800'
      nginx.ingress.kubernetes.io/session-cookie-max-age: '172800'
      nginx.ingress.kubernetes.io/session-cookie-samesite: None
      nginx.ingress.kubernetes.io/session-cookie-name: grafana-affinity
      nginx.ingress.kubernetes.io/enable-modsecurity: 'true'
      nginx.ingress.kubernetes.io/enable-owasp-core-rules: 'true'
      cert-manager.io/acme-challenge-type: http01
      cert-manager.io/cluster-issuer: letsencrypt
    labels:
      app: grafana
    path: /grafana
    tls:
      - secretName: datalayer-observer-cert-secret
