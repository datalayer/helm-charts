apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ template "spacer.app-name" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "spacer.app-name" . }}
  strategy:
    rollingUpdate:
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: {{ template "spacer.app-name" . }}
        release: {{ .Release.Name }}
        datalayer.io/app: {{ template "spacer.app-name" . }}
    spec:
      terminationGracePeriodSeconds: 0
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: role.datalayer.io/api
                operator: In
                values:
                - "true"
      imagePullSecrets:
            - name: reg-creds
      containers:
        - name: spacer
          image: {{ .Values.spacer.image }}
          imagePullPolicy: {{ .Values.spacer.imagePullPolicy }}
          ports:
            - containerPort: {{ .Values.spacer.port }}
              protocol: TCP
          {{- if or .Values.spacer.env .Values.spacer.envValueFrom }}
          env:
            {{- range $key, $value := .Values.spacer.envValueFrom }}
            - name: {{ $key }}
              valueFrom: {{- $value | toYaml | nindent 16 }}
            {{- end }}
            {{- range $key, $value := .Values.spacer.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          {{- end }}
          readinessProbe:
            httpGet:
              path: /api/spacer/version
              port: 9900
            successThreshold: 1
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 15
          volumeMounts:
          resources:
{{ toYaml .Values.spacer.resources | indent 12 }} 
#         - name: spacer-sidecar
#           image: {{ .Values.spacer.sidecar.image }}
#          imagePullPolicy: {{ .Values.spacer.imagePullPolicy }}
#           args: ["proxy", "-p", "8001"]
