{{- if index .Values "opentelemetry-operator" "enabled" }}
apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: datalayer-collector
{{- with .Values.collector.affinity }}
affinity: {{- toYaml . | nindent 8 }}
{{- end }}
spec:
  # The opentelemetry-collector chart is a good place to look for good configuration
  # Reference: https://github.com/open-telemetry/opentelemetry-helm-charts/tree/main/charts/opentelemetry-collector
  mode: deployment # This configuration is omittable.
  config:
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318

    # https://github.com/open-telemetry/opentelemetry-collector/tree/main/processor#recommended-processors
    processors:
      # https://github.com/open-telemetry/opentelemetry-collector/tree/main/processor/batchprocessor
      batch: {}
      # https://github.com/open-telemetry/opentelemetry-collector/tree/main/processor/memorylimiterprocessor
      # Default memory limiter configuration for the collector based on k8s resource limits.
      memory_limiter:
        # check_interval is the time between measurements of memory usage.
        check_interval: 5s
        # By default limit_mib is set to 80% of ".Values.resources.limits.memory"
        limit_percentage: 80
        # By default spike_limit_mib is set to 25% of ".Values.resources.limits.memory"
        spike_limit_percentage: 25

      # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/k8sattributesprocessor
      k8sattributes:
        extract:
          metadata:
          - k8s.namespace.name
          - k8s.deployment.name
          - k8s.statefulset.name
          - k8s.daemonset.name
          - k8s.cronjob.name
          - k8s.job.name
          - k8s.node.name
          - k8s.pod.name
          - k8s.pod.uid
          - k8s.pod.start_time
        passthrough: false
        pod_association:
        - sources:
          - from: resource_attribute
            name: k8s.pod.ip
        - sources:
          - from: resource_attribute
            name: k8s.pod.uid
        - sources:
          - from: connection

    exporters:
      # https://github.com/open-telemetry/opentelemetry-collector/tree/main/exporter/debugexporter
      # debug:
      #   verbosity: detailed

      # Data sources: metrics
      # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/exporter/prometheusexporter
      prometheus:
        endpoint: 0.0.0.0:8889
        # namespace: default

      otlp:
        endpoint: {{ default .Values.observer.namespace .Release.Namespace }}-tempo:4317
        tls:
          insecure: true

    extensions:
      # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/extension/healthcheckextension
      health_check: {}
      # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/extension/pprofextension
      pprof: {}
      # https://github.com/open-telemetry/opentelemetry-collector/blob/main/extension/zpagesextension/README.md
      zpages: {}

    service:
      extensions: [health_check, pprof, zpages]
      pipelines:
        traces:
          receivers: [otlp]
          processors: [k8sattributes, memory_limiter, batch]
          exporters: [otlp]
        metrics:
          receivers: [otlp]
          processors: [k8sattributes, memory_limiter, batch]
          exporters: [prometheus]
{{- end }}
