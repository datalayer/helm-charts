{{ if eq .Values.server.clusterType "any" -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jupyter-server-ingress
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/session-cookie-expires: '172800'
    nginx.ingress.kubernetes.io/session-cookie-max-age: '172800'
    nginx.ingress.kubernetes.io/session-cookie-samesite: None
    nginx.ingress.kubernetes.io/session-cookie-name: jupyter-server-affinity
    nginx.ingress.kubernetes.io/enable-modsecurity: 'true'
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: 'true'
    cert-manager.io/acme-challenge-type: http01
    cert-manager.io/cluster-issuer: letsencrypt
    acme.cert-manager.io/http01-ingress-class: datalayer-traefik
    traefik.ingress.kubernetes.io/router.tls: 'true'
  labels:
    app: jupyter-server
spec:
  ingressClassName: datalayer-traefik
  tls:
  - hosts:
    - {{ .Values.server.env.DATALAYER_RUN_URL }}
    secretName: {{ .Values.server.env.DATALAYER_RUN_URL }}-datalayer-api-cert-secret
  rules:
  - host: {{ .Values.server.env.DATALAYER_RUN_URL }}
    http:
      paths:
      - path: /api/jupyter-server
        pathType: Prefix
        backend:
          service:
            name: {{ .Release.Name }}-svc
            port:
              number: 8888
{{- end }}
